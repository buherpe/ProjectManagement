@page "/{page}"
@using ProjectManagement.Pages.CurrencyConverterChatSettings;
@using ProjectManagement.Pages.Domains
@using ProjectManagement.Pages.Currencies;
@using ProjectManagement.Pages.ProjectStatuses
@using ProjectManagement.Pages.Projects
@using ProjectManagement.Pages.Settings;
@using ProjectManagement.Pages.Tasks
@using ProjectManagement.Pages.Users

@inject MyContext _context;

@*@if (_view != null)
{
    <DataGridComponent View="@_view" />
}*@

@switch (Page)
{
    case "projects":
        <PageTitle>Проекты</PageTitle>
        <DataGridComponent View="@(new ProjectAllView(_context))" TEntity="Project" />
        break;
    case "tasks":
        <PageTitle>Задачи</PageTitle>
        <DataGridComponent View="@(new TaskAllView(_context))"
                   TEntity="ProjectManagement.Pages.Tasks.Task" />
        break;
    case "projectStatuses":
        <PageTitle>Статусы проекта</PageTitle>
        <DataGridComponent View="@(new ProjectStatusAllView(_context))" TEntity="ProjectStatus" />
        break;
    case "users":
        <PageTitle>Пользователи</PageTitle>
        <DataGridComponent View="@(new UserAllView(_context))" TEntity="User" />
        break;
    case "domains":
        <PageTitle>Домены</PageTitle>
        <DataGridComponent View="@(new DomainAllView(_context))" TEntity="Domain" />
        break;
    case "currencies":
        <PageTitle>Настройки</PageTitle>
        <DataGridComponent View="@(new CurrencyAllView(_context))" TEntity="Currency" />
        break;
    case "settings":
        <PageTitle>Настройки</PageTitle>
        <DataGridComponent View="@(new SettingAllView(_context))" TEntity="Setting" />
        break;
    case "currencyConverterChatSettings":
        <PageTitle>Конвертер валют → Настройки чатов</PageTitle>
        <DataGridComponent View="@(new CurrencyConverterChatSettingAllView(_context))" 
            TEntity="CurrencyConverterChatSetting" />
        break;
    default:
        break;
}

@code {
    [Parameter]
    public string Page { get; set; }

    //private IView _view;

    //protected override async Task OnParametersSetAsync()
    //{
    //    //_view = Views.FirstOrDefault(x => x.GetEntityNames() == Page);

    //}
}
